@model List<User>

@{
    var serialNumber = 1; // Initialize number
}

<div class="text-right">
    <button class="btn btn-success" data-toggle="modal" data-target="#addDoctorModal">Add User</button>
</div>

<table class="table table-striped mt-3">
    <thead>
        <tr>
            <th>No</th>
            <th>Name</th>
            <th>Age</th>
            <th>DOB</th>
            <th>Place</th>
            <th>Image</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@serialNumber</td>
                <td>@user.Name</td>
                <td>@user.Age</td>
                <td>@user.DateOfBirth</td>
                <td>@user.Place</td>
                <td><img src="~/users/@user.Image" style="width: 50px; height: 50px; border-radius: 50%;" alt="">
                </td>
                @* <td><button class="btn btn-primary">edit</button></td> *@
                <td><button class="btn btn-primary" onclick="showEditUserModal(@user.Id)">Edit</button></td>

                <td>
                    <button class="btn btn-danger" onclick="showDeleteConfirmation(@user.Id)">Delete</button>
                </td>
            </tr>
            serialNumber++;
        }
    </tbody>
</table>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editUserForm" asp-action="EditUser" method="post" enctype="multipart/form-data">
                    <input type="hidden" id="editUserId" name="Id" />
                    <div class="form-group">
                        <label>Name</label>
                        <input name="Name" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Age</label>
                        <input name="Age" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Date of Birth</label>
                        <input type="hidden" name="DateOfBirth" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Place</label>
                        <input name="Place" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="editUserImage">Image</label>
                        <input type="file" id="editUserImage" name="file" class="form-control" />
                    </div>

                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    function showDeleteConfirmation(userId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'This action cannot be undone!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Delete',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteUser(userId);
            }
        });
    }

    function deleteUser(userId) {
        fetch(`/Admin/DeleteUser?id=${userId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
            .then(response => {
                if (response.ok) {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'User has been deleted',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        location.reload();

                    })
                } else {
                    console.error('Error deleting user');
                }
            })
            .catch(error => {
                console.error('Error deleting user', error);
            });
    }
</script>

<script>
    var usersData = @Html.Raw(ViewBag.UsersJson);
</script>



<script>
    function showEditUserModal(userId) {
        var user = findUserById(userId);

        if (user) {
        
            $('#editUserId').val(userId);
            $('#editUserForm input[name="Name"]').val(user.Name);
            $('#editUserForm input[name="Age"]').val(user.Age);
            $('#editUserForm input[name="DateOfBirth"]').val(user.DateOfBirth);
            $('#editUserForm input[name="Place"]').val(user.Place);
    
                $('#editUserModal').modal('show'); // Show edit modal
        }
    }

    function findUserById(userId) {
        for (var i = 0; i < usersData.length; i++) {
            if (usersData[i].Id == userId) {
                return usersData[i];
            }
        }
        return null;
    }
</script>
